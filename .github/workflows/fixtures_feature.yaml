name: Build and Package Fixtures for a feature

on:
  push:
    branches:
      - main
    tags:
      - '*@v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Get feature name
        id: feature-name
        shell: bash
        run: |
          echo name=eip7692 >> "$GITHUB_OUTPUT"
      - name: Get the selected feature configuration from the config-feature.yaml
        id: config-feature-reader
        shell: bash
        run: |
          awk "/^${{ steps.feature-name.outputs.name }}:/{flag=1; next} /^[[:alnum:]]/{flag=0} flag" ./config-feature.yaml \
          | sed 's/ //g' | sed 's/:/=/g' >> "$GITHUB_OUTPUT"
      - uses: ./.github/actions/build-evm
        id: evm-builder
        with:
          type: ${{ steps.config-feature-reader.outputs.evm-type }}
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.config-feature-reader.outputs.python }}
      - name: Install solc compiler
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then PLATFORM="linux-amd64"; else PLATFORM="macosx-amd64"; fi
          RELEASE_NAME=$(curl https://binaries.soliditylang.org/${PLATFORM}/list.json | jq -r --arg SOLC_VERSION "${{ steps.config-feature-reader.outputs.solc }}" '.releases[$SOLC_VERSION]')
          wget -O $GITHUB_WORKSPACE/bin/solc https://binaries.soliditylang.org/${PLATFORM}/$RELEASE_NAME
          chmod a+x $GITHUB_WORKSPACE/bin/solc
          echo $GITHUB_WORKSPACE/bin >> $GITHUB_PATH
      - name: Run fixtures fill
        shell: bash
        run: |
          pip install --upgrade pip
          python -m venv env
          source env/bin/activate
          pip install -e .
          fill -n auto --evm-bin=${{ steps.evm-builder.outputs.evm-bin }} --fork=${{ steps.config-feature-reader.outputs.fork }} ${{ steps.config-feature-reader.outputs.tests }}
      - name: Create fixtures info file
        shell: bash
        run: |
          echo -e "ref: $GITHUB_REF \ncommit: $GITHUB_SHA\nbuild: $(date +"%Y-%m-%dT%H:%M:%SZ")" \
          > fixtures/info.txt
      - name: Tar fixtures output
        shell: bash
        run: |
          tar -czvf fixtures_${{ steps.feature-name.outputs.name }}.tar.gz ./fixtures
      - uses: actions/upload-artifact@v4
        with:
          name: fixtures_${{ steps.feature-name.outputs.name }}
          path: fixtures_${{ steps.feature-name.outputs.name }}.tar.gz
  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: .
      - name: Draft Pre-release
        uses: softprops/action-gh-release@v2
        with:
          files: './**'
          draft: true
          prerelease: true
          generate_release_notes: true
          fail_on_unmatched_files: true